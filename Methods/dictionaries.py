#Словари используются для хранения значений данных в парах ключ:значение.
#Словарь представляет собой упорядоченный (начиная с python 3.7) набор, изменяемый и не допускающий дублирования.
#Элементы словаря представлены парами ключ:значение, и на них можно ссылаться, используя имя ключа.


################# Clear ################
from typing import Any


car = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
car.clear()#Метод удаляет все элементы из словаря
print(car)#{}


################# Copy #################
car = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
x = car.copy()#метод возвращает копию указанного словаря.
print(x)#{'brand': 'Ford', 'model': 'Mustang', 'year': 1964}


############### Fromkeys ###############
x = ('key1', 'key2', 'key3')
y = 0
thisdict = dict.fromkeys(x, y)#метод возвращает словарь с указанными ключами и указанным значением
print(thisdict)#['key1': 0, 'key2': 0, 'key3': 0]
thisdict = dict.fromkeys(x)
print(thisdict)#['key1': None, 'key2': None, 'key3': None]


################## Get #################
car = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
x = car.get("model")#Метод возвращает значение элемента с указанным ключом.
print(x)#Mustang
x = car.get("price", 15000)#Попробуйте вернуть значение несуществующего элемента
print(x)


################# Items ################
car = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
x = car.items()#метод возвращает объект представления. Объект представления содержит пары ключ-значение словаря в виде кортежей в списке. Объект представления будет отражать любые изменения, внесенные в словарь, см. пример ниже
print(x)#dict_items([('brand', 'Ford'), ('model', 'Mustang'), ('year', 1964)])
car["year"] = 2018
print(x)#dict_items([('brand', 'Ford'), ('model', 'Mustang'), ('year', 2018)])


################# Keys #################
car = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
x = car.keys()#метод возвращает объект представления. Объект представления содержит ключи словаря в виде списка. Объект представления будет отражать любые изменения, внесенные в словарь, см. пример ниже.
print(x)#dict_keys(['brand', 'model', 'year'])
car["color"] = "white"
print(x)#dict_keys(['brand', 'model', 'year', 'color'])


################## Pop #################
car = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
x = car.pop("model")#метод удаляет указанный элемент из словаря.Значение удаленного элемента — это возвращаемое значение метода pop()
print(car)#{'brand': 'Ford', 'year': 1964}
print(x)#Mustang
#По желанию. Возвращаемое значение, если указанный ключ не существует. Если этот параметр не указан, а элемент с указанным ключом не найден, возникает ошибка
x = car.pop("price", Any)
print(x)#typing.Any


################ Popitem ###############
car = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
car['price']=15000
print(car)
car.popitem()#метод удаляет элемент, который последним был вставлен в словарь. В версиях до 3.7 метод popitem() удаляет случайный элемент.Удаленный элемент — это возвращаемое значение в виде кортежа
print(car)


############## Setdefault ##############
car = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
x = car.setdefault("model", "Bronco")#Метод возвращает значение элемента с указанным ключом.Если ключ не существует, это значение становится значением ключа
print(x)#Mustang
x = car.setdefault("color", "white")
print(x)#white


################ Update ################
car = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
car.update({"color": "White"})#метод вставляет указанные элементы в словарь.Указанные элементы могут быть словарем или итерируемым объектом с парами ключ-значение.
print(car)#{'brand': 'Ford', 'model': 'Mustang', 'year': 1964, 'color': 'White'}


################ Values ################
car = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
x = car.values()#метод возвращает объект представления. Объект представления содержит значения словаря в виде списка. Объект представления будет отражать любые изменения, внесенные в словарь
print(x)#dict_values(['Ford', 'Mustang', 1964])
car["year"] = 2018
print(x)#dict_values(['Ford', 'Mustang', 2018])